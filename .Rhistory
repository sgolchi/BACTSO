plot3 = ggplot(sdf, aes(x = fact, y = MSE_ab, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('RMSE for A&B') + scale_fill_brewer(palette="Set2") + facet_grid(f ~ ., labeller = label_both)
plot4 = ggplot(sdf, aes(x = fact, y = bias_a, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('bias_A') + scale_fill_brewer(palette="Set2") + facet_grid(f ~ ., labeller = label_both)
plot5 = ggplot(sdf, aes(x = fact, y = bias_b, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('bias_B') + scale_fill_brewer(palette="Set2") + facet_grid(f ~ ., labeller = label_both)
plot6 = ggplot(sdf, aes(x = fact, y = bias_ab, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('bias_AB') + scale_fill_brewer(palette="Set2") + facet_grid(f ~ ., labeller = label_both)
plot7 = ggplot(sdf, aes(x = fact, y = ESS, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('Expected sample size') + scale_fill_brewer(palette="Set2") + facet_grid(f ~ ., labeller = label_both)
plot0
plot1
plot2
plot3
plot4
plot7
p0 = ggplot(sim_df, aes(x = IF, color = model )) +
stat_ecdf(geom = 'line') + facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
scale_color_brewer(palette = 'Set2') + ylab("probability of trial termination for efficacy")
p0
load("revised_results.RData")
sim_df$IF = NA
sim_df$IF = sim_df$nb/5
names(sim_df)[names(sim_df) == "p"] = 'f'
p0 = ggplot(sim_df, aes(x = IF, color = model )) +
stat_ecdf(geom = 'line') + facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
scale_color_brewer(palette = 'Set2') + ylab("probability of trial termination for efficacy")
p0
load("extreme_results_1.RData")
sim_df$IF = NA
sim_df$IF = sim_df$nb/5
names(sim_df)[names(sim_df) == "p"] = 'f'
p0 = ggplot(sim_df, aes(x = IF, color = model )) +
stat_ecdf(geom = 'line') + facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
scale_color_brewer(palette = 'Set2') + ylab("probability of trial termination for efficacy")
p0
load("revised_results_fixed_1.RData")
sdf = sim_df %>%
filter(batch != 5) %>%
group_by(fact, p, model) %>%
summarise(power = mean((pab>0.95)))
names(sdf)[names(sdf) == "p"] = "f"
names(sim_df)[names(sim_df) == "p"] = 'f'
plot0 = ggplot(sdf, aes(x = fact, y = power, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('power') + scale_fill_brewer(palette="Set2") + facet_grid(f ~ ., labeller = label_both)
plot1 = ggplot(sim_df, aes(x = batch, y = pab, color = model)) +
stat_summary(fun.data=mean_cl_normal, position=position_dodge(0.5), geom="errorbar") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="point") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="line") +
facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
xlab('') + ylab('P(A&B superior to A and B)') +
scale_color_brewer(palette = 'Set2')
plot2 = ggplot(sim_df, aes(x = batch, y = pa, color = model)) +
stat_summary(fun.data=mean_cl_normal, position=position_dodge(0.5), geom="errorbar") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="point") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="line") +
facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
xlab('') + ylab('P(A superior to B and A&B)') +
scale_color_brewer(palette = 'Set2')
plot3 = ggplot(sim_df, aes(x = batch, y = pb, color = model)) +
stat_summary(fun.data=mean_cl_normal, position=position_dodge(0.5), geom="errorbar") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="point") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="line") +
facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
xlab('') + ylab('P(B superior to A and A&B)') +
scale_color_brewer(palette = 'Set2')
plot0
plot1
plot1
plot2
plot3
library(add.adp)
detach("package:addadp", unload=TRUE)
library(add.adp)
M = 50
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .5, .5, .75, .75, .75, 1, 1, 1)
pmean = p + c(rep(c(0, .25, -.25), 3))
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p), rep(pmean, each = length(P_b)))
names(cases) = c('P_a', 'P_b', 'p', 'pmean')
library(parallel)
sim0 = mcmapply(trial_add_RAR_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p, pmean0 = cases$pmean,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M, pvar = 0.16), mc.cores = 4)
sim_df = cbind(unlist_df(t(sim0)), mefa:::rep.data.frame(cases, each = M))
sim_df$model = rep("FA_unbiased", nrow(sim_df))
sim_df$model[sim_df$p < sim_df$pmean]  = "FA_biased_p"
sim_df$model[sim_df$p > sim_df$pmean]  = "FA_biased_n"
fact = paste('P_A', '=', sim_df$P_a, 'P_B', '=', sim_df$P_b)
sim_df$fact = fact
sim_df0 = sim_df
sim_df0$pmean = NULL
# sdf = sim_df %>%
#   group_by(fact, p, model) %>%
#   summarise(EFP = mean(FP))
# plot0 = ggplot(sdf, aes(x = fact, y = EFP, fill = model )) +
#   geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
#   xlab("") + ylab('EPF') + scale_fill_brewer(palette="Set2") + facet_grid(p ~ .)
########################################################
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim1 = mcmapply(trial_add_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p, pmean0 = cases$pmean,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
sim_df1 = cbind(unlist_df(t(sim1)), mefa:::rep.data.frame(cases, each = M))
sim_df1$model = "FullA"
fact = paste('P_A', '=', sim_df1$P_a, 'P_B', '=', sim_df1$P_b)
sim_df1$fact = fact
########################################
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim2 = mcmapply(trial_std_RAR_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p, pmean0 = cases$pmean,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
sim_df2 = cbind(unlist_df(t(sim2)), mefa:::rep.data.frame(cases, each = M))
sim_df2$model = "Conventional"
fact = paste('P_A', '=', sim_df2$P_a, 'P_B', '=', sim_df2$P_b)
sim_df2$fact = fact
sim_df = rbind(sim_df0, sim_df1, sim_df2)
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim1 = mcmapply(trial_add_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
sim_df1 = cbind(unlist_df(t(sim1)), mefa:::rep.data.frame(cases, each = M))
sim_df1$model = "FullA"
fact = paste('P_A', '=', sim_df1$P_a, 'P_B', '=', sim_df1$P_b)
sim_df1$fact = fact
########################################
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim2 = mcmapply(trial_std_RAR_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
M
View(sim_df1)
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim2 = mcmapply(trial_std_RAR_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
ss = function(par){
P_a = par[1]
P_b = par[2]
p = par[3]
P_ab = logistic(max(logit(P_a), logit(P_b)) + p * min(logit(P_a), logit(P_b)))
n1 = floor(((P_a * (1 - P_a) + P_ab * (1 - P_ab)) / (P_a - P_ab)^2)* 7.9)
n2 = floor(((P_b * (1 - P_b) + P_ab * (1 - P_ab)) / (P_b - P_ab)^2)* 7.9)
return(max(n1, 2))
}
ss(c(.35,.4,1))
ss(c(.4,.4,1))
M = 10
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim1 = mcmapply(trial_add_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
library(parallel)
sim1 = mcmapply(trial_add_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
library(add.adp)
library(parallel)
sim1 = mcmapply(trial_add_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
sim_df1 = cbind(unlist_df(t(sim1)), mefa:::rep.data.frame(cases, each = M))
sim_df1$model = "FullA"
fact = paste('P_A', '=', sim_df1$P_a, 'P_B', '=', sim_df1$P_b)
sim_df1$fact = fact
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim2 = mcmapply(trial_std_RAR_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
library(parallel)
cases
sim2 = mcmapply(trial_std_RAR_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = 2), mc.cores = 4)
sim2 = mcmapply(trial_std_RAR_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = 10), mc.cores = 4)
sim_df = rbind(sim_df0, sim_df1, sim_df2)
M = 10
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .5, .5, .75, .75, .75, 1, 1, 1)
pmean = p + c(rep(c(0, .25, -.25), 3))
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p), rep(pmean, each = length(P_b)))
names(cases) = c('P_a', 'P_b', 'p', 'pmean')
library(parallel)
sim0 = mcmapply(trial_add_RAR_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p, pmean0 = cases$pmean,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M, pvar = 0.16), mc.cores = 4)
library(add.adp)
load("~/Dropbox/clinical_trials/additivity_paper/add.adp/data/average_data.RData")
library(add.adp)
M = 100
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .5, .5, .75, .75, .75, 1, 1, 1)
pmean = p + c(rep(c(0, .25, -.25), 3))
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p), rep(pmean, each = length(P_b)))
names(cases) = c('P_a', 'P_b', 'p', 'pmean')
cases
library(parallel)
sim0 = mcmapply(trial_add_fix_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p, pmean0 = cases$pmean,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M, pvar = 0.16), mc.cores = 4)
sim_df = cbind(unlist_df(t(sim0)), mefa:::rep.data.frame(cases, each = M))
sim_df$model = rep("FA_unbiased", nrow(sim_df))
sim_df$model[sim_df$p < sim_df$pmean]  = "FA_biased_p"
sim_df$model[sim_df$p > sim_df$pmean]  = "FA_biased_n"
fact = paste('P_A', '=', sim_df$P_a, 'P_B', '=', sim_df$P_b)
sim_df$fact = fact
sim_df0 = sim_df
sdf = sim_df %>%
group_by(fact, p, model) %>%
summarise(EFP = mean(FP))
plot0 = ggplot(sdf, aes(x = fact, y = EFP, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('EPF') + scale_fill_brewer(palette="Set2") + facet_grid(p ~ .)
library(dplyr)
library(ggplot2)
sdf = sim_df %>%
group_by(fact, p, model) %>%
summarise(EFP = mean(FP))
plot0 = ggplot(sdf, aes(x = fact, y = EFP, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('EPF') + scale_fill_brewer(palette="Set2") + facet_grid(p ~ .)
sdf = sim_df %>%
group_by(fact, p, model) %>%
summarise(power = mean((pab>0.95)))
plot0 = ggplot(sdf, aes(x = fact, y = EFP, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('EPF') + scale_fill_brewer(palette="Set2") + facet_grid(p ~ .)
plot0
ggplot(sdf, aes(x = fact, y = power, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('EPF') + scale_fill_brewer(palette="Set2") + facet_grid(p ~ .)
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim1 = mcmapply(trial_fix_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p, pmean0 = cases$pmean,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
sim_df1 = cbind(unlist_df(t(sim1)), mefa:::rep.data.frame(cases, each = M))
sim_df1$model = "FullA"
fact = paste('P_A', '=', sim_df1$P_a, 'P_B', '=', sim_df1$P_b)
sim_df1$fact = fact
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim1 = mcmapply(trial_fix_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
sim_df1 = cbind(unlist_df(t(sim1)), mefa:::rep.data.frame(cases, each = M))
sim_df1$model = "FullA"
fact = paste('P_A', '=', sim_df1$P_a, 'P_B', '=', sim_df1$P_b)
sim_df1$fact = fact
?trial_add_full_sim
?trial_add_full
mapply(trial_fix_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = 2), mc.cores = 4)
mapply(trial_fix_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = 2))
library(add.adp)
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim2 = mcmapply(trial_std_fix_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p, pmean0 = cases$pmean,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim1 = mcmapply(trial_fix_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = 2), mc.cores = 4)
sim_df1 = cbind(unlist_df(t(sim1)), mefa:::rep.data.frame(cases, each = M))
sim_df1$model = "FullA"
fact = paste('P_A', '=', sim_df1$P_a, 'P_B', '=', sim_df1$P_b)
sim_df1$fact = fact
View(sim1)
unlist_df(t(sim1))
mefa:::rep.data.frame(cases, each = M)
M
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim1 = mcmapply(trial_fix_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
library(add.adp)
M
M= 2
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim1 = mcmapply(trial_fix_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
sim_df1 = cbind(unlist_df(t(sim1)), mefa:::rep.data.frame(cases, each = M))
sim_df1$model = "FullA"
fact = paste('P_A', '=', sim_df1$P_a, 'P_B', '=', sim_df1$P_b)
sim_df1$fact = fact
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim1 = mcmapply(trial_fix_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
library(add.adp)
M= 100
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim1 = mcmapply(trial_fix_full_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
sim_df1 = cbind(unlist_df(t(sim1)), mefa:::rep.data.frame(cases, each = M))
sim_df1$model = "FullA"
fact = paste('P_A', '=', sim_df1$P_a, 'P_B', '=', sim_df1$P_b)
sim_df1$fact = fact
library(add.adp)
P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.5, .75, 1)
cases = cbind(rep(P_a, length(p)), expand.grid(P_b, p))
names(cases) = c('P_a', 'P_b', 'p')
#library(parallel)
sim2 = mcmapply(trial_std_fix_sim, P_a = cases$P_a, P_b = cases$P_b, p = cases$p,
MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = M), mc.cores = 4)
sim_df2 = cbind(unlist_df(t(sim2)), mefa:::rep.data.frame(cases, each = M))
sim_df2$model = "Conventional"
fact = paste('P_A', '=', sim_df2$P_a, 'P_B', '=', sim_df2$P_b)
sim_df2$fact = fact
sim_df = rbind(sim_df0, sim_df1, sim_df2)
sim_df0$pmean = NULL
sim_df = rbind(sim_df0, sim_df1, sim_df2)
sdf = sim_df %>%
filter(batch != 5) %>%
group_by(fact, p, model) %>%
summarise(power = mean((pab>0.95)))
names(sdf)[names(sdf) == "p"] = "f"
names(sim_df)[names(sim_df) == "p"] = 'f'
plot0 = ggplot(sdf, aes(x = fact, y = power, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('power') + scale_fill_brewer(palette="Set2") + facet_grid(f ~ ., labeller = label_both)
plot1 = ggplot(sim_df, aes(x = batch, y = pab, color = model)) +
stat_summary(fun.data=mean_cl_normal, position=position_dodge(0.5), geom="errorbar") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="point") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="line") +
facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
xlab('') + ylab('P(A&B superior to A and B)') +
scale_color_brewer(palette = 'Set2')
plot2 = ggplot(sim_df, aes(x = batch, y = pa, color = model)) +
stat_summary(fun.data=mean_cl_normal, position=position_dodge(0.5), geom="errorbar") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="point") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="line") +
facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
xlab('') + ylab('P(A superior to B and A&B)') +
scale_color_brewer(palette = 'Set2')
plot3 = ggplot(sim_df, aes(x = batch, y = pb, color = model)) +
stat_summary(fun.data=mean_cl_normal, position=position_dodge(0.5), geom="errorbar") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="point") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="line") +
facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
xlab('') + ylab('P(B superior to A and A&B)') +
scale_color_brewer(palette = 'Set2')
plot0
plot1
plot2
plot3
load("revised_results_fixed_1.RData")
setwd("~/Dropbox/clinical_trials/additivity_paper/add.adp/data")
load("revised_results_fixed_1.RData")
sdf = sim_df %>%
filter(batch != 5) %>%
group_by(fact, p, model) %>%
summarise(power = mean((pab>0.95)))
names(sdf)[names(sdf) == "p"] = "f"
names(sim_df)[names(sim_df) == "p"] = 'f'
plot0 = ggplot(sdf, aes(x = fact, y = power, fill = model )) +
geom_bar(stat = "identity", position = position_dodge(), color = 'grey40', width = 0.5) +
xlab("") + ylab('power') + scale_fill_brewer(palette="Set2") + facet_grid(f ~ ., labeller = label_both)
plot1 = ggplot(sim_df, aes(x = batch, y = pab, color = model)) +
stat_summary(fun.data=mean_cl_normal, position=position_dodge(0.5), geom="errorbar") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="point") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="line") +
facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
xlab('') + ylab('P(A&B superior to A and B)') +
scale_color_brewer(palette = 'Set2')
plot2 = ggplot(sim_df, aes(x = batch, y = pa, color = model)) +
stat_summary(fun.data=mean_cl_normal, position=position_dodge(0.5), geom="errorbar") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="point") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="line") +
facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
xlab('') + ylab('P(A superior to B and A&B)') +
scale_color_brewer(palette = 'Set2')
plot3 = ggplot(sim_df, aes(x = batch, y = pb, color = model)) +
stat_summary(fun.data=mean_cl_normal, position=position_dodge(0.5), geom="errorbar") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="point") +
stat_summary(fun.y=mean,position=position_dodge(width=0.5),geom="line") +
facet_grid(f ~ fact, labeller = labeller(f = label_both, fact = label_value)) +
xlab('') + ylab('P(B superior to A and A&B)') +
scale_color_brewer(palette = 'Set2')
plot0
plot1
library(add.adp)
library(add.adp)
library(add.adp)
library(add.adp)
library(add.adp)
library(add.adp)
liberary(roxygen2)
library(roxygen2)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
pkgbuild::compile_dll()
devtools::document()
pkgbuild::compile_dll()
pkgbuild::compile_dll()
istall(BACTSO)
devtools::instalk(BACTSO
)
devtools::install(BACTSO)
devtools::install('BACTSO')
setwd("~/Documents/private")
devtools::install('BACTSO')
pkgbuild::compile_dll()
devtools::document()
setwd("~/Documents/private/BACTSO")
pkgbuild::compile_dll()
devtools::document()
devtools::document()
pkgbuild::compile_dll()
devtools::document()
Rcpp::compileAttributes()
pkgbuild::compile_dll()
devtools::document()
load(BACTSO)
load('BACTSO')
setwd("~/Documents/private")
devtools::install('BACTSO')
library(BACTSO)
?sim_data
trial_time = 30
enrollment_time = 15
N = 1000
p_lfu = 0.1
alpha1 = 1.1
alpha2 = 1.4
theta1 = -6.65
theta2 =  -8.7
data = sim_data(trial_time, enrollment_time, N, p_lfu, alpha1, alpha2, theta1, theta2)
trial_time = 30
enrollment_time = 15
N = 1000
p_lfu = 0.1
alpha1 = 1.4
alpha2 = 1.1
theta1 = -8.7
theta2 =  -7
data = BACTSO::sim_data(trial_time, enrollment_time, N, p_lfu, alpha1, alpha2, theta1, theta2)
?BACTSO::sim_data
devtools::install('BACTSO')
