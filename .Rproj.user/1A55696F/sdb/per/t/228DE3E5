{
    "collab_server" : "",
    "contents" : "library(plyr)\nlibrary(dplyr)\nlibrary(gridExtra)\n\nfit0 = stan(file ='logistic_add_rar.stan', data = data, chains = 0)\nfit1 = stan(file ='logistic_rar.stan', data = data, chains = 0)\n\n\n\nP_a = c(.35, .4)\nP_b = c(.4, .4)\np = c(.25, .25, .5, .5, .75, .75)\npmean = p + rep(c(0, .1), 3)\ncases_add = cbind(rep(P_a, length(p)), expand.grid(P_b, p), rep(pmean, each = length(P_b)))\nnames(cases_add) = c('P_a', 'P_b', 'p', 'pmean')\nadd_RAR_sim = mapply(trial_add_RAR_sim, p = cases_add$p, P_a = cases_add$P_a, P_b = cases_add$P_b, \n                 pmean0 = cases_add$pmean, MoreArgs = list(PF_var = 1, pvar0 = .16,\n                                                           np = 5, nadapt = 6, M = 500))\nsave(add_RAR_sim, file = 'add_RAR_sim01.RData')\n\np0 = c(.25, .50, .75)\ncases_std = cbind(rep(P_a, length(p0)), expand.grid(P_b, p0))\nnames(cases_std) = c('P_a', 'P_b', 'p')\nstd_RAR_sim = mapply(trial_std_RAR_sim, p = cases_std$p, P_a = cases_std$P_a, P_b = cases_std$P_b,\n                 MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = 500))\nsave(std_RAR_sim, file = 'std_RAR_sim01.RData')\n\nadd_RAR = unlist_df(t(add_RAR_sim))\nrep.row <- function(r, n){\n  colwise(function(x) rep(x, n))(r)\n}\n\ndf_add = cbind(add_RAR, mefa:::rep.data.frame(cases_add, each = 500))#do.call(rbind, replicate(500, cases_add, simplify=FALSE)))\ndf_add$model[df_add$pmean == .25 | df_add$pmean == .5 | df_add$pmean == .75] = 'FA_unbiased'\ndf_add$model[df_add$pmean == .35 | df_add$pmean == .6 | df_add$pmean == .85] = 'FA_biased'\ndf_add$pmean = NULL\nstd_RAR = unlist_df(t(std_RAR_sim))\ndf_std = cbind(std_RAR, mefa:::rep.data.frame(cases_std, each = 500))#do.call(rbind, replicate(500, cases_std, simplify=FALSE)))\ndf_std$model = rep('conventional', 3000)\n\ndf = rbind(df_add, df_std)\nfact = paste('P_A', '=', df$P_a, 'P_B', '=', df$P_b)\ndf$fact = fact\n\n\n\nggdf_p25 = df %>%\n  filter(p == .25)\nggdf_p50 = df %>%\n  filter(p == .50)\nggdf_p75 = df %>%\n  filter(p == .75)\nggdf_p25 = ddply(ggdf_p25, c(\"model\", \"fact\"), summarise,\n                 Nb = mean(nb), MN = median(RN), EN = mean(RN), FP = mean(FP), RMSE_ab = sqrt(mean(MSE_ab0)), RMSE_a = sqrt(mean(MSE_a0)), \n                 RMSE_b = sqrt(mean(MSE_b0)))\nggdf_p50 = ddply(ggdf_p50, c(\"model\", \"fact\"), summarise,\n                 Nb = mean(nb), MN = median(RN), EN = mean(RN), FP = mean(FP), RMSE_ab = sqrt(mean(MSE_ab0)), RMSE_a = sqrt(mean(MSE_a0)), \n                 RMSE_b = sqrt(mean(MSE_b0)))\nggdf_p75 = ddply(ggdf_p75, c(\"model\", \"fact\"), summarise,\n                 Nb = mean(nb), MN = median(RN), EN = mean(RN), FP = mean(FP), RMSE_ab = sqrt(mean(MSE_ab0)), RMSE_a = sqrt(mean(MSE_a0)), \n                 RMSE_b = sqrt(mean(MSE_b0)))\np1 = ggplot(ggdf_p25, aes(x = fact, y = FP, fill = model )) +\n  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.25') + ylab('EPF') + scale_fill_brewer(palette=\"Set2\")\np2 = ggplot(ggdf_p50, aes(x = fact, y = FP, fill = model)) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.5') + ylab('EPF') + scale_fill_brewer(palette=\"Set2\")\np3 = ggplot(ggdf_p75, aes(x = fact, y = FP, fill = model )) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.75') + ylab('EPF') + scale_fill_brewer(palette=\"Set2\")\np = grid.arrange(p1, p2, p3, nrow = 3)\n###############\np1 = ggplot(ggdf_p25, aes(x = fact, y = EN, fill = model )) +\n  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.25') + ylab('Expected sample size') + scale_fill_brewer(palette=\"Set2\")\np2 = ggplot(ggdf_p50, aes(x = fact, y = EN, fill = model)) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.5') + ylab('Expected sample size') + scale_fill_brewer(palette=\"Set2\")\np3 = ggplot(ggdf_p75, aes(x = fact, y = EN, fill = model )) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.75') + ylab('Expected sample size') + scale_fill_brewer(palette=\"Set2\")\np = grid.arrange(p1, p2, p3, nrow = 3)\n########\np1 = ggplot(ggdf_p25, aes(x = fact, y = MN, fill = model )) +\n  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.25') + ylab('Median sample size') + scale_fill_brewer(palette=\"Set2\")\np2 = ggplot(ggdf_p50, aes(x = fact, y = MN, fill = model)) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.5') + ylab('Median sample size') + scale_fill_brewer(palette=\"Set2\")\np3 = ggplot(ggdf_p75, aes(x = fact, y = MN, fill = model )) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.75') + ylab('Median sample size') + scale_fill_brewer(palette=\"Set2\")\np = grid.arrange(p1, p2, p3, nrow = 3)\n\n###\np1 = ggplot(ggdf_p25, aes(x = fact, y = Nb, fill = model )) +\n  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.25') + ylab('expected number of batches') + scale_fill_brewer(palette=\"Set2\")\np2 = ggplot(ggdf_p50, aes(x = fact, y = Nb, fill = model)) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.5') + ylab('expected number of batches') + scale_fill_brewer(palette=\"Set2\")\np3 = ggplot(ggdf_p75, aes(x = fact, y = Nb, fill = model )) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.75') + ylab('expected number of batches') + scale_fill_brewer(palette=\"Set2\")\np = grid.arrange(p1, p2, p3, nrow = 3)\n#####\np1 = ggplot(ggdf_p25, aes(x = fact, y = RMSE_ab, fill = model )) +\n  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.25') + ylab('RMSE for A&B') + scale_fill_brewer(palette=\"Set2\")\np2 = ggplot(ggdf_p50, aes(x = fact, y = RMSE_ab, fill = model)) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.5') + ylab('RMSE for A&B') + scale_fill_brewer(palette=\"Set2\")\np3 = ggplot(ggdf_p75, aes(x = fact, y = RMSE_ab, fill = model )) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.75') + ylab('RMSE for A&B') + scale_fill_brewer(palette=\"Set2\")\np = grid.arrange(p1, p2, p3, nrow = 3)\n###\np1 = ggplot(ggdf_p25, aes(x = fact, y = RMSE_a, fill = model )) +\n  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.25') + ylab('RMSE for A') + scale_fill_brewer(palette=\"Set2\")\np2 = ggplot(ggdf_p50, aes(x = fact, y = RMSE_a, fill = model)) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.5') + ylab('RMSE for A') + scale_fill_brewer(palette=\"Set2\")\np3 = ggplot(ggdf_p75, aes(x = fact, y = RMSE_a, fill = model )) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.75') + ylab('RMSE for A') + scale_fill_brewer(palette=\"Set2\")\np = grid.arrange(p1, p2, p3, nrow = 3)\n###\np1 = ggplot(ggdf_p25, aes(x = fact, y = RMSE_b, fill = model )) +\n  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.25') + ylab('RMSE for B') + scale_fill_brewer(palette=\"Set2\")\np2 = ggplot(ggdf_p50, aes(x = fact, y = RMSE_b, fill = model)) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.5') + ylab('RMSE for B') + scale_fill_brewer(palette=\"Set2\")\np3 = ggplot(ggdf_p75, aes(x = fact, y = RMSE_b, fill = model )) +\n  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + \n  xlab('f = 0.75') + ylab('RMSE for B') + scale_fill_brewer(palette=\"Set2\")\np = grid.arrange(p1, p2, p3, nrow = 3)\n\n\n######### nb cumulative mass function ################\ndf$IF = NA\ndf$IF[df$nb == 1] = .2\ndf$IF[df$nb == 2] = .4\ndf$IF[df$nb == 3] = .6\ndf$IF[df$nb == 4] = .8\ndf$IF[df$nb == 5] = 1\ndf_p25 = df %>%\n  filter(p == .25)\ndf_p50 = df %>%\n  filter(p == .50)\ndf_p75 = df %>%\n  filter(p == .75)\np1 = ggplot(df_p25, aes(x = IF, color = model )) +\n  stat_ecdf(geom = 'line') + facet_grid(. ~ fact) + xlab('IF (f = 0.25)') + \n  scale_color_brewer(palette = 'Set1')\np2 = ggplot(df_p50, aes(x = IF, color = model )) +\n  stat_ecdf(geom = 'line') + facet_grid(. ~ fact) + xlab('IF (f = 0.5)') +\n  scale_color_brewer(palette = 'Set1')\np3 = ggplot(df_p75, aes(x = IF, color = model )) +\n  stat_ecdf(geom = 'line') + facet_grid(. ~ fact) + xlab('IF (f = 0.75)') +\n  scale_color_brewer(palette = 'Set1')\np = grid.arrange(p1, p2, p3, nrow = 3)\n\n\n\n",
    "created" : 1506547400051.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "564938478",
    "id" : "228DE3E5",
    "lastKnownWriteTime" : 1496694110,
    "last_content_update" : 1496694110,
    "path" : "~/Dropbox/clinical_trials/additivity_paper/RAR_exe_plotting01.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}