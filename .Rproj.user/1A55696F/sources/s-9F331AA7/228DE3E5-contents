library(plyr)
library(dplyr)
library(gridExtra)

fit0 = stan(file ='logistic_add_rar.stan', data = data, chains = 0)
fit1 = stan(file ='logistic_rar.stan', data = data, chains = 0)



P_a = c(.35, .4)
P_b = c(.4, .4)
p = c(.25, .25, .5, .5, .75, .75)
pmean = p + rep(c(0, .1), 3)
cases_add = cbind(rep(P_a, length(p)), expand.grid(P_b, p), rep(pmean, each = length(P_b)))
names(cases_add) = c('P_a', 'P_b', 'p', 'pmean')
add_RAR_sim = mapply(trial_add_RAR_sim, p = cases_add$p, P_a = cases_add$P_a, P_b = cases_add$P_b, 
                 pmean0 = cases_add$pmean, MoreArgs = list(PF_var = 1, pvar0 = .16,
                                                           np = 5, nadapt = 6, M = 500))
save(add_RAR_sim, file = 'add_RAR_sim01.RData')

p0 = c(.25, .50, .75)
cases_std = cbind(rep(P_a, length(p0)), expand.grid(P_b, p0))
names(cases_std) = c('P_a', 'P_b', 'p')
std_RAR_sim = mapply(trial_std_RAR_sim, p = cases_std$p, P_a = cases_std$P_a, P_b = cases_std$P_b,
                 MoreArgs = list(PF_var = 1, np = 5, nadapt = 6, M = 500))
save(std_RAR_sim, file = 'std_RAR_sim01.RData')

add_RAR = unlist_df(t(add_RAR_sim))
rep.row <- function(r, n){
  colwise(function(x) rep(x, n))(r)
}

df_add = cbind(add_RAR, mefa:::rep.data.frame(cases_add, each = 500))#do.call(rbind, replicate(500, cases_add, simplify=FALSE)))
df_add$model[df_add$pmean == .25 | df_add$pmean == .5 | df_add$pmean == .75] = 'FA_unbiased'
df_add$model[df_add$pmean == .35 | df_add$pmean == .6 | df_add$pmean == .85] = 'FA_biased'
df_add$pmean = NULL
std_RAR = unlist_df(t(std_RAR_sim))
df_std = cbind(std_RAR, mefa:::rep.data.frame(cases_std, each = 500))#do.call(rbind, replicate(500, cases_std, simplify=FALSE)))
df_std$model = rep('conventional', 3000)

df = rbind(df_add, df_std)
fact = paste('P_A', '=', df$P_a, 'P_B', '=', df$P_b)
df$fact = fact



ggdf_p25 = df %>%
  filter(p == .25)
ggdf_p50 = df %>%
  filter(p == .50)
ggdf_p75 = df %>%
  filter(p == .75)
ggdf_p25 = ddply(ggdf_p25, c("model", "fact"), summarise,
                 Nb = mean(nb), MN = median(RN), EN = mean(RN), FP = mean(FP), RMSE_ab = sqrt(mean(MSE_ab0)), RMSE_a = sqrt(mean(MSE_a0)), 
                 RMSE_b = sqrt(mean(MSE_b0)))
ggdf_p50 = ddply(ggdf_p50, c("model", "fact"), summarise,
                 Nb = mean(nb), MN = median(RN), EN = mean(RN), FP = mean(FP), RMSE_ab = sqrt(mean(MSE_ab0)), RMSE_a = sqrt(mean(MSE_a0)), 
                 RMSE_b = sqrt(mean(MSE_b0)))
ggdf_p75 = ddply(ggdf_p75, c("model", "fact"), summarise,
                 Nb = mean(nb), MN = median(RN), EN = mean(RN), FP = mean(FP), RMSE_ab = sqrt(mean(MSE_ab0)), RMSE_a = sqrt(mean(MSE_a0)), 
                 RMSE_b = sqrt(mean(MSE_b0)))
p1 = ggplot(ggdf_p25, aes(x = fact, y = FP, fill = model )) +
  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.25') + ylab('EPF') + scale_fill_brewer(palette="Set2")
p2 = ggplot(ggdf_p50, aes(x = fact, y = FP, fill = model)) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.5') + ylab('EPF') + scale_fill_brewer(palette="Set2")
p3 = ggplot(ggdf_p75, aes(x = fact, y = FP, fill = model )) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.75') + ylab('EPF') + scale_fill_brewer(palette="Set2")
p = grid.arrange(p1, p2, p3, nrow = 3)
###############
p1 = ggplot(ggdf_p25, aes(x = fact, y = EN, fill = model )) +
  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.25') + ylab('Expected sample size') + scale_fill_brewer(palette="Set2")
p2 = ggplot(ggdf_p50, aes(x = fact, y = EN, fill = model)) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.5') + ylab('Expected sample size') + scale_fill_brewer(palette="Set2")
p3 = ggplot(ggdf_p75, aes(x = fact, y = EN, fill = model )) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.75') + ylab('Expected sample size') + scale_fill_brewer(palette="Set2")
p = grid.arrange(p1, p2, p3, nrow = 3)
########
p1 = ggplot(ggdf_p25, aes(x = fact, y = MN, fill = model )) +
  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.25') + ylab('Median sample size') + scale_fill_brewer(palette="Set2")
p2 = ggplot(ggdf_p50, aes(x = fact, y = MN, fill = model)) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.5') + ylab('Median sample size') + scale_fill_brewer(palette="Set2")
p3 = ggplot(ggdf_p75, aes(x = fact, y = MN, fill = model )) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.75') + ylab('Median sample size') + scale_fill_brewer(palette="Set2")
p = grid.arrange(p1, p2, p3, nrow = 3)

###
p1 = ggplot(ggdf_p25, aes(x = fact, y = Nb, fill = model )) +
  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.25') + ylab('expected number of batches') + scale_fill_brewer(palette="Set2")
p2 = ggplot(ggdf_p50, aes(x = fact, y = Nb, fill = model)) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.5') + ylab('expected number of batches') + scale_fill_brewer(palette="Set2")
p3 = ggplot(ggdf_p75, aes(x = fact, y = Nb, fill = model )) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.75') + ylab('expected number of batches') + scale_fill_brewer(palette="Set2")
p = grid.arrange(p1, p2, p3, nrow = 3)
#####
p1 = ggplot(ggdf_p25, aes(x = fact, y = RMSE_ab, fill = model )) +
  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.25') + ylab('RMSE for A&B') + scale_fill_brewer(palette="Set2")
p2 = ggplot(ggdf_p50, aes(x = fact, y = RMSE_ab, fill = model)) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.5') + ylab('RMSE for A&B') + scale_fill_brewer(palette="Set2")
p3 = ggplot(ggdf_p75, aes(x = fact, y = RMSE_ab, fill = model )) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.75') + ylab('RMSE for A&B') + scale_fill_brewer(palette="Set2")
p = grid.arrange(p1, p2, p3, nrow = 3)
###
p1 = ggplot(ggdf_p25, aes(x = fact, y = RMSE_a, fill = model )) +
  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.25') + ylab('RMSE for A') + scale_fill_brewer(palette="Set2")
p2 = ggplot(ggdf_p50, aes(x = fact, y = RMSE_a, fill = model)) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.5') + ylab('RMSE for A') + scale_fill_brewer(palette="Set2")
p3 = ggplot(ggdf_p75, aes(x = fact, y = RMSE_a, fill = model )) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.75') + ylab('RMSE for A') + scale_fill_brewer(palette="Set2")
p = grid.arrange(p1, p2, p3, nrow = 3)
###
p1 = ggplot(ggdf_p25, aes(x = fact, y = RMSE_b, fill = model )) +
  geom_bar(stat = 'identity', position = position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.25') + ylab('RMSE for B') + scale_fill_brewer(palette="Set2")
p2 = ggplot(ggdf_p50, aes(x = fact, y = RMSE_b, fill = model)) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.5') + ylab('RMSE for B') + scale_fill_brewer(palette="Set2")
p3 = ggplot(ggdf_p75, aes(x = fact, y = RMSE_b, fill = model )) +
  geom_bar(stat = 'identity', position=position_dodge(), color = 'grey40', width = 0.5) + 
  xlab('f = 0.75') + ylab('RMSE for B') + scale_fill_brewer(palette="Set2")
p = grid.arrange(p1, p2, p3, nrow = 3)


######### nb cumulative mass function ################
df$IF = NA
df$IF[df$nb == 1] = .2
df$IF[df$nb == 2] = .4
df$IF[df$nb == 3] = .6
df$IF[df$nb == 4] = .8
df$IF[df$nb == 5] = 1
df_p25 = df %>%
  filter(p == .25)
df_p50 = df %>%
  filter(p == .50)
df_p75 = df %>%
  filter(p == .75)
p1 = ggplot(df_p25, aes(x = IF, color = model )) +
  stat_ecdf(geom = 'line') + facet_grid(. ~ fact) + xlab('IF (f = 0.25)') + 
  scale_color_brewer(palette = 'Set1')
p2 = ggplot(df_p50, aes(x = IF, color = model )) +
  stat_ecdf(geom = 'line') + facet_grid(. ~ fact) + xlab('IF (f = 0.5)') +
  scale_color_brewer(palette = 'Set1')
p3 = ggplot(df_p75, aes(x = IF, color = model )) +
  stat_ecdf(geom = 'line') + facet_grid(. ~ fact) + xlab('IF (f = 0.75)') +
  scale_color_brewer(palette = 'Set1')
p = grid.arrange(p1, p2, p3, nrow = 3)



